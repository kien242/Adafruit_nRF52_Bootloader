name: Build

on:
  pull_request:
  push:
  repository_dispatch:
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        board:
          - 'bluemicro_nrf52833'
          - 'bluemicro_nrf52840'
          - 'kimiro'
          - 'mdk_nrf52840_dongle'
          - 'mikoto'
          - 'nice_nano'
          - 'nrfmicro'
          - 'pca10056'
          - 'pca10059'
          - 'pca10100'
          - 'nrfpill'
          - 'nemm'
    steps:
    - name: Setup Python
      uses: actions/setup-python@v3
      
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true

    - name: Checkout linkermap
      uses: actions/checkout@v3
      with:
         repository: hathach/linkermap
         path: linkermap

    - name: Set Toolchain URL
      run: echo >> $GITHUB_ENV TOOLCHAIN_URL=https://github.com/xpack-dev-tools/arm-none-eabi-gcc-xpack/releases/download/v10.2.1-1.1/xpack-arm-none-eabi-gcc-10.2.1-1.1-linux-x64.tar.gz

    - name: Cache Toolchain
      uses: actions/cache@v3
      id: cache-toolchain
      with:
        path: ~/cache/
        key: ${{ runner.os }}-22-05-17-${{ env.TOOLCHAIN_URL }}

    - name: Install Toolchain
      if: steps.cache-toolchain.outputs.cache-hit != 'true'
      run: |
        mkdir -p ~/cache/toolchain
        wget --progress=dot:mega $TOOLCHAIN_URL -O toolchain.tar.gz
        tar -C ~/cache/toolchain -xaf toolchain.tar.gz

    - name: Set Toolchain Path
      run: echo >> $GITHUB_PATH `echo ~/cache/toolchain/*/bin`

    - name: Install Tools
      run: |
        pip3 install adafruit-nrfutil uritemplate requests intelhex
        pip3 install linkermap/
    
    - name: Build
      run: |
        make BOARD=${{ matrix.board }} all
        make BOARD=${{ matrix.board }} copy-artifact

    - name: Linker Map
      run: make BOARD=${{ matrix.board }} linkermap
      
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.board }}
        path: _bin/${{ matrix.board }}

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      if: ${{ github.event_name == 'release' }}
      with:
        files: |
          _bin/${{ matrix.board }}/${{ matrix.board }}_bootloader-*.zip
          _bin/${{ matrix.board }}/${{ matrix.board }}_bootloader-*.hex
          _bin/${{ matrix.board }}/update-${{ matrix.board }}_bootloader-*.uf2
